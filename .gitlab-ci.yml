include:
  - '/backend/apis/.gitlab-ci.yml'
  - '/backend/cdk/.gitlab-ci.yml'

image: node:20.11.1

stages:
  - test
  - build
  - test-cdk
  - deploy

.common_setup: &common_setup
  - cd backend/cdk
  - npm i
  - npm i -g aws-cdk typescript ts-node
  - aws sts get-caller-identity

.install-aws: &install-aws
  - apt update
  - apt install -y jq
  - curl -k "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
  - unzip "awscliv2.zip"
  - ./aws/install

.authenticate-aws: &authenticate-aws
  - export CREDS=`aws sts assume-role --duration-seconds 10800 --role-session-name "gitlab-devops-${CI_PIPELINE_ID}" --role-arn arn:aws:iam::${AWS_ACCOUNT_NUMBER}:role/mywebsite-devops`
  - export AWS_ACCESS_KEY_ID=`echo $CREDS | jq -r .Credentials.AccessKeyId`
  - export AWS_SECRET_ACCESS_KEY=`echo $CREDS | jq -r .Credentials.SecretAccessKey`
  - export AWS_SESSION_TOKEN=`echo $CREDS | jq .Credentials.SessionToken`
  - export AWS_DEFAULT_REGION="${AWS_REGION}"
  - echo $AWS_SESSION_TOKEN

deploy_frontend_staging:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "staging"'
      changes:
        - app/**/*
        - components/**/*
        - hooks/**/*
        - pages/**/*
        - types/**/*
        - utils/**/*
        - next.config.js
        - package.json
        - vercel.json
  script:
    - curl -X POST https://api.vercel.com/v1/integrations/deploy/prj_XVrzM2eALvquKAUKMDAlgjSccy4B/cGxMEW1fLT

deploy_frontend_production:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - app/**/*
        - components/**/*
        - hooks/**/*
        - pages/**/*
        - types/**/*
        - utils/**/*
        - next.config.js
        - package.json
        - vercel.json
  script:
    - curl -X POST https://api.vercel.com/v1/integrations/deploy/prj_XVrzM2eALvquKAUKMDAlgjSccy4B/k4eiYJ4iju

deploy_staging:
  stage: deploy
  environment:
    name: staging
  rules:
    - if: '$CI_COMMIT_BRANCH == "staging"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
  needs:
    - job: build_staging
      artifacts: true
    - job: test_cdk
  dependencies:
    - build_staging
  script:
    - *common_setup
    - npm i
    - |
      variables=(
        "ACCESS_KEY_ID=${ACCESS_KEY_ID}"
        "CALENDLY_API_ACCESS_TOKEN=${CALENDLY_API_ACCESS_TOKEN}"
        "DEAD_LETTER_QUEUE_URL=${DEAD_LETTER_QUEUE_URL}"
        "NODE_ENV=staging"
        "ORIGIN=${ORIGIN}"
        "SECRET_ACCESS_KEY=${SECRET_ACCESS_KEY}"
        "SEND_GRID_API_KEY=${SEND_GRID_API_KEY}"
        "STAGE=prod"
        "WHICH_ROUTE=${WHICH_ROUTE}"
      )
      env_file="./.env"
      for var in "${variables[@]}"; do
        echo "$var" >> "$env_file"
      done
    - cdk deploy --require-approval=never

build_prod:
  artifacts:
    expose_as: 'backend-build'
    name: 'backend-build'
    paths:
      - $PWD/backend/apis/.serverless/jngpaypal.zip
  needs: ['test_lambda']
  dependencies:
    - test_lambda
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - backend/apis/**/*
  stage: build
  environment:
    name: production
  script:
    - npm run package

