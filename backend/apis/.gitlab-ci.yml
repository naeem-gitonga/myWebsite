cache:
  paths:
    - backend/apis/node_modules/

.common_install: &common_install
  - cd backend/apis
  - npm i

test_lambda:
  stage: test
  image: node:20.11.1
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_COMMIT_BRANCH != "master"'
      changes:
        - backend/apis/**/*
  script:
    - *common_install
    - npm run test

build_staging:
  artifacts:
    expose_as: 'backend-build-staging'
    name: 'backend-build-staging'
    paths:
      - $PWD/backend/apis/.serverless/jngpaypal.zip
  needs: ['test_lambda']
  dependencies:
    - test_lambda
  stage: build
  environment:
    name: staging
  script:
    - *common_install
    - touch .env
    - |
      variables=(
        "ORIGIN=${ORIGIN}"
        "SEND_GRID_API_KEY=${SEND_GRID_API_KEY}"
        "ACCESS_KEY_ID=${ACCESS_KEY_ID}"
        "SECRET_ACCESS_KEY=${SECRET_ACCESS_KEY}"
        "WHICH_ROUTE=${WHICH_ROUTE}"
        "NODE_ENV=staging"
      )
      env_file="./.env"
      for var in "${variables[@]}"; do
        echo "$var" >> "$env_file"
      done
    - npm run package

deploy_staging:
  stage: deploy
  environment:
    name: staging
  rules:
    - if: '$CI_COMMIT_REF_NAME == "staging"'
  needs:
    - job: build_staging
      artifacts: true
    - job: test_lambda
  dependencies:
    - build_staging
  script:
    - cd ../cdk
    - npm i
    - |
      variables=(
        "ACCESS_KEY_ID=${ACCESS_KEY_ID}"
        "CALENDLY_API_ACCESS_TOKEN=${CALENDLY_API_ACCESS_TOKEN}"
        "DEAD_LETTER_QUEUE_URL=${DEAD_LETTER_QUEUE_URL}"
        "NODE_ENV=staging"
        "ORIGIN=${ORIGIN}"
        "SECRET_ACCESS_KEY=${SECRET_ACCESS_KEY}"
        "SEND_GRID_API_KEY=${SEND_GRID_API_KEY}"
        "STAGE=prod"
        "WHICH_ROUTE=${WHICH_ROUTE}"
      )
      env_file="./.env"
      for var in "${variables[@]}"; do
        echo "$var" >> "$env_file"
      done
    - cdk deploy --require-approval=never

build_prod:
  artifacts:
    expose_as: 'backend-build'
    name: 'backend-build'
    paths:
      - $PWD/backend/apis/.serverless/jngpaypal.zip
  needs: ['test_lambda']
  dependencies:
    - test_lambda
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - backend/apis/**/*
  stage: build
  environment:
    name: production
  script:
    - *common_install
    - npm run package
